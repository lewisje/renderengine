#summary Why I'm dropping the HTML contexts

= Introduction =

Up until beta 1.4, the plan was to support HTML contexts as easily as a canvas or SVG context.  Due to the nature of the beast (how the DOM is updated) it makes this option fairly cumbersome to support.  Graphical contexts, like canvas and SVG, are cleared before each frame is redrawn, whereas the DOM isn't cleared -- objects are merely manipulated.

Because of this, I was having to write a lot of extra code which determined which way anything was being drawn.  If it was targeting the HTML contexts, it worked one way.  If it was a graphical context, it was wholly different.

You'd think it would be as simple as the context knowing which way to render something, but as it turns out, it isn't that simple.  Components like the sprite component need to request the context to draw them.  However, in the case of an HTML context, a sprite (unless changed) only needs to be drawn once.  From that moment on, it can just manipulate its position.  For a graphical context, it has to be redrawn for each frame.

Determining which mode of operation was taking the code away from the render context and putting it into the components.  This is not optimal when trying to squeeze out as much performance as I can.  So, it is with a heavy heart that I drop support for the HTML context as a viable render target.

Believe me, this decision didn't come easily.  But the decision had to be made, and now that it's done, I believe that progress can speed up a bit.  Maybe sometime in the future I can consider reviving the HTML contexts.  I was excited to see what could be done with CSS DOM transformations, but that will be put on hold indefinitely starting today (11/15/2009).

I'm sorry to anyone that was hoping to use this capability, or had banked on it.  But unfortunately I have to point out that during this beta development, anything can change.  I don't say this to be mean, I'm only pointing it out because it's the truth.

- Brett
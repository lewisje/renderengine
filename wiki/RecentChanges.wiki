#summary A table of changes that have been recently made to the engine
#labels Featured
= Trunk Changes =

The following changes affect the "trunk" of the development repository.  Changes listed here are in development, may contain bugs, and may be refactored or changed frequently.

|| *Date* || *Notes* ||
|| 07/21/2010 || Uploaded RC2 files. ||
|| 07/20/2010 || Timers are now pooled to allow pausing and destruction when the engine is paused and shutdown, respectively.  A few minor updates to the Asteroids Evolved demo game. ||

----

|| *Date* || *Notes* ||
|| 07/18/2010 || *v1.0 RC2 has been tagged.* Performed some cleanup on the sources.  Upgraded to jQuery v1.4.2. Moved the advanced tutorial to the "/tutorials" folder.  Fixed mime type for PNG files.  Removed jQuery v1.2.6 from repository.  Visual enhancements to Asteroids demo.  Added keyboard input component test. ||
|| 07/16/2010 || Some crash bugs has been addressed.  Minor enhancements to the engine have also been implemented.  The particle engine was optimized and revamped.  Also, some work was done to address an issue that only showed up in Chrome. ||

----

|| *Date* || *Notes* ||
|| 07/14/2010 || *CODE FREEZE - v1.0 RC1 has been tagged.* ||
|| 12/21/2009 || Added Google's Closure Compiler as an option for the compressed engine.  Added a GZIP version of the engine to the build process.  Updated a couple of files where CC picked up some errors. ||
|| 12/20/2009 || Fixed the !MouseInputComponent which was totally broken.  I also created the start of a manual test harness which helped get the component up and running.  In addition, the linker was updated to parse constructors (which it apparently wasn't doing). ||
|| 12/17/2009 || Revived the 2D DOM context due to some refactoring which makes it possible. ||
|| 12/14/2009 || Finished the API documentation. Updated the loading messages for all examples. Modified the engine to detect which browser it is running within and stop if it's not compatible. Fixed the way that Chrome Frame is loaded. ||
|| 12/13/2009 || Moved the particle editor to version 2.0.  Dropped the "Music Player" example. Finished the bitmap font editor - adding documentation to the Wiki.  Ended up removing Arial bitmap font since it wouldn't parse cleanly. ||
|| 12/08/2009 || Bitmap font editor nearing comlpetion for v1.0 release. All font def files generated with font editor. Added two new bitmap fonts: Arial, Copperplate. ||
|| 11/29/2009 || Updated the API documentation online. Worked on the bitmap font editor. ||
|| 11/25/2009 || Updated a bunch of documentation in components and engine files.  I plan to finish with the rest of the files and rebuild the online documentation soon. ||
|| 11/24/2009 || Just completed tutorial 4 and it is now up. ||
|| 11/23/2009 || While working on tutorial 4, it occurred to me that there wasn't a simple component to render a bitmap to the context.  There's now an ImageComponent which does just that. ||
|| 11/20/2009 || I've been working on tutorials for the web.  The one tutorial that was out there was just too complicated, so I made it an "advanced" tutorial and started with some simpler ones. ||

----

|| *Date* || *Notes* ||
|| 11/15/2009 || *Beta 1.4 has been tagged.* ~~Dropping support for HTML contexts as targetable contexts.  Only the document context will remain to allow the engine to boot.~~ ||
|| 11/09/2009 || Updated build process with a "nodebug" option to remove all Console.log, .info, and .debug messages. This should speed up processing a tiny bit. Updated README.txt with recent information. Added Chrome Frame support tag to demos and tools. ||
|| 11/08/2009 || Added native methods for rendering text via the Canvas on browsers which support it.  Attempting to create a component which will take advantage of this. || 
|| 11/07/2009 || Updated the Engine file and split script loading into its own file.  Additionally, I fixed up the script load tracking to be more visually accurate. ||
|| 10/17/2009 || Made a bunch of changes to get the Sprite Editor working more cleanly. I've implemented a lot of functionality (it's still not perfect) but am baffled why Chrome is so far behind on Canvas development. ||
|| 10/13/2009 || Updated render contexts to be unobtrusive. Contexts should be able to be swapped without concern. In !WiiTest, you can see this by setting the "context" query param to 0 for HTMLDivContext and 1 for !CanvasContext.  Also added a way to know when a classes dependencies have all been resolved.  If the resolved() method is declared on the class object, it will be called. ||
|| 07/30/2009 || Fixed a bug in "engine.hostobject.js" which was causing the demos to fail. ||
|| 01/22/2009 || Extended collider component with two derivatives - box and circle colliders.  These two components will perform more specific tests for collision instead of leaving it totally up to the host.  Also added a way to make a collider component only respond to specific objects. ||
|| 01/21/2009 || Updated the Wii test so that balls bounce off each other. ||
|| 01/18/2009 || Started work on beta 1.4 ||

----

|| *Date* || *Notes* ||
|| 01/16/2009 || _Beta 1.3 has been tagged._  Decided to skip the Poker/Tetris clone for now since it was fairly complex logic.  Instead, there's a simple "game" which was built for Wii (it works in all supported browsers, however) ||
|| 01/14/2009 || Almost done with the HTML context stuff I planned for b1.3.  I've also got a Wii test app which demos the HTML context, sprite loading/rendering, and Wii remote input. ||
|| 01/12/2009 || Started work on beta 1.3.  Created a beta 1.2.1 tag since all the examples were pointing to the old version of jQuery. ||

----

|| *Date* || *Notes* ||
|| 01/12/2009 || Updated beta 1.2 to include a sample Tomcat context and instructions about setting up a server to test and develop. ||
|| 01/11/2009 || _Beta 1.2 has been tagged._ Removed WZGraphicsContext (too slow for actual use). Added missing base resource loader class to minified version in build.xml. Implemented selective demo and tool copying. ||
|| 01/05/2009 || Updated the Wiki with a ton of information and restructured some pages.  Added an EngineFeatureList page outlining what the engine currently provides.  I'll add to it as more features become available. ||
|| 01/02/2009 || Working on updating the HTMLElementContext to enhance its functionality.  I've gotten image and sprite rendering working.  Need to get the transform stack working now (position only).  Another example game is in the works to test it out. ||
|| 11/15/2008 || Wii is working! I got the engine up and running on the Wii -- it's a little slow at this point, but I got it working.  =) ||
|| 11/04/2008 || Updating the UI tools for editor design and development. ||
|| 10/31/2008 || Fixed a bug in the dependency checker that collected names of variables for resolution.  The pattern was wrong and was missing variable references that didn't have an implied value. ||
|| 10/27/2008 || I forgot to add that I updated to the latest version of Soundmanager2 ||
|| 10/14/2008 || I've updated the script loading routines to pass back a status flag. Updated dependency checker to report unresolved links. ||

----

|| *Date* || *Notes* ||
|| 10/11/2008 || _Beta 1 has been tagged_ ||
|| 10/08/2008 ||Assigned event handlers are now properly removed on BaseObject. Updated Asteroids clone to use new method so that events for the player are properly added and removed. ||
|| 10/05/2008 ||The Sprite Editor has been modified to handle pixels a bit differently.  This was necessary for the pixel manipulation routines (flip, shift, mirror, rotate). ||
|| 09/30/2008 ||Updated the sprite editor a little bit.  It's functional, but incomplete at this point.  I've updated the ReleaseMilestones page... Beta 1 is close to being cut. ||
|| 09/29/2008 ||The sprite editor is working in Firefox and Opera.  !WebKit, for all its wonders, doesn't appear to support the `.toDataURL()` method of the Canvas element.  This means that Safari and Chrome are, as of yet, unsupported. ||
|| 09/28/2008 ||Working on a sprite editor for the engine.  It only works in Firefox because it supports the getImageData() method of Canvas. Go to the EngineExamples page and check it out... ||
|| 09/16/2008 ||Opera is working again. _Chrome is now supported!_ The examples are working across all browsers.  Sound is still causing me problems.  Added a page for SupportedBrowsers. ||
|| 09/13/2008 ||I've changed the method of object rendering.  The RenderComponent will now return true iff the object is supposed to draw and the [HostComponents HostObject] is in the RenderContext viewport.  I also added some buttons to the metrics display to allow a dev to pause the engine and inspect objects and the game. ||
|| 09/04/2008 ||The dependency checker is complete now.  I changed the method by which functions are identified and dependencies collected. It's using the browser's built-in evaluation of objects to gather function dependencies, evaluating a dummy class when creating the class would require a nonexistent dependency. Still isn't working in Opera, but that's most likely a regex issue. ||
|| 09/02/2008 ||The dependency checker is more solid today.  I've gotten the examples working in Firefox 3 (still no Opera and Safari, but soon I promise).  I need to start using the issue tracker so I can get ready for an initial Beta release. ||
|| 08/30/2008 ||Safari and Opera are *broken* again... sigh. I've got an even better dependency checker working.  It actually scrapes classes, looking for object and class dependencies.  It's a little bit shaky, as it only understands certain coding styles. Hopefully I'll get it working in Safari and Opera again soon.  It's getting closer to an actual release.  Oh, yeah, for some reason sound isn't working now. ||
|| 08/20/2008 ||Safari and Opera are loading again... WOOT! Didn't have to sacrifice the new loading code, either. Added a Safari console for debug messages. I've got a basic editor started for the sprite testing.  The scrolling background is now just the canvas with a slice of the background showing. Updated the rendering pipeline to ignore objects that aren't in the viewport. Added an XML resource loader. ||
|| 08/14/2008 ||The dependency checking breaks loading in Safari and Opera.  Not a big deal, I know how to make them work so I might have to revert to old loading for those browsers.  Yeah, it takes a bit longer but at least it'll work. ||
|| 08/13/2008 ||I was able to speed up engine loading using a new dependency processor that I've written.  It's still a little buggy, so expect some wonkiness for the time being.  Not all objects are currently configured with their dependency, but when they are I will probably remove the serial script processor due to it being the main slowness in engine startup.  The dependency processor simply looks for an object that another object depends on to become available, then initializes that object class. ||
|| 08/11/2008 ||I've added a couple new loaders: one for generic JSON objects, and another for simple bitmap levels with a collision map.  I then created an object to load that level into a scrolling background object.  Updated the SMB example to use the new scrolling background. ||
|| 08/08/2008 ||Internet Explorer is now loading the example game.  However, I cannot get the canvas context to show up.  I'm using !ExCanvas, and even !ExCanvas for Silverlight but neither is actually displaying anything.  I also added Firebug Lite into the mix for IE.  When you specify the `debug=true` query param, it will display the console. *Note:* I'm rethinking using the new Firebug Lite... it's not ready for primetime. ||
|| 08/05/2008 ||I've created a sprite resource loader and a sprite rendering component.  I'll be updating it with more functionality in later commits. ||
|| 08/01/2008 ||Simplified the way to get at query parameters.  Added "metrics" query parameter to allow turning on engine metrics without having to open Firebug.  I played with pooling math objects, but found it to _not_ do much for the Firefox 3 hitch.  Both Safari and Opera are outperforming Firefox 3 at the moment.  My work friend has let me know that the example game won't start on the Wii, but I'm going to continue pursuing this.  I need to get me a Wii so I can test it myself... ||
|| 07/29/2008 ||Object pooling added.  This is a big change and requires some updates to class usage in games.  See the wiki article about ObjectPooling for notes on what this means. ||
|| 07/24/2008 ||Nintendo Wii support?  It occurred to me that the Wii uses Opera.  And since Opera supports The Render Engine, I asked a friend at work to verify if the engine works.  I looked up some stuff about it and found how to access the Wii Remote from Javascript.  Added a !WiimoteInputComponent to the components list and updated the example game to attempt to use it.  I'll let you all know how it goes! ||
|| 07/21/2008 ||Well, today I confirmed that the engine runs on iPhone.  The example game is quite slow and it requires a whole different interface mechanism, but it's good to know that the engine now runs on Firefox, Safari (Mac and iPhone), and Opera.  I need to get the IE layer working (or implement a VML render context), then it'll support most major browsers.  Here's to hoping... Oh, almost forgot, I'm working on a set of demos/tutorials right now -- look for updates through the week. ||
|| 07/20/2008 ||A number of new changes have occurred.  I've added [http://www.schillmania.com/projects/soundmanager2/ SoundManager2] support for playing sounds!  This will be a nice change, but will require (at least) Adobe Flash 8.  Yeah, it kinda gets away from the "entirely in Javascript" aspect, but it's only an API -- no Flash knowledge is required for use.  I combined !EngineSupport into the engine.js file because it made sense.  A few methods were being called that Engine needed and I want as few required script calls in the game loader files.  Being able to initialize the engine just by calling "engine.js" is my ultimate goal. Finally, I've modified the "local.html" example which shows a configuration to load a game locally.  This allows for proper debugging _with sounds_ since filesystem based loading wasn't working so hot. ||
|| 07/16/2008 ||The example game is now working in FF, Opera, and Safari! I changed the library loading mechanism to queue scripts to assist Safari. I'm going to try this on iPhone at some point to see if this engine can be made viable for that platform. ||
|| 07/14/2008 ||I've recently updated the example with some small enhancements.  Yes, it's been a while since I played with the engine, but I have some time to do so.  I added the ability to set the world scale so it doesn't just render at some fixed size.  You can now scale the window to draw in a smaller area which may free up some CPU cycles on slower machines.  Additionally, I've added in a "players remaining" indicator and cleaned up some of the example game code.  Finally, I updated the metrics tracking code to allow for a sampling and smoothing so the numbers aren't so unreadable.  Along the lines of the SVG render context that I mentioned before, I'm still working on it.  It's showing promise, but isn't quite ready for primetime.  Interestingly, it has validated the concept of allowing the swapping of render contexts and not noticing a big difference.  I've got an itch to see if I can implement a context for WZGraphics written by Walter Zorn. =) ||
|| 06/2008 ||With the release of Firefox 3.0, I've noticed a huge increase in performance.  It gives me renewed hope that someday writing games for a browser will be an actual choice, and not just a hobby.  With the updates to Firefox I also have a renewed interest in getting the SVG context up and running.  I hope to get something in the short term. ||
|| 02/24/2008 || Just yesterday, February 23, 2008, I noticed that there is something similar in the works by EA called [http://www.simcarnival.com The Sims Carnival].  It's interesting to see a validation of my idea by such a big company.  I've signed up for the beta, and hope to be accepted, so I can see what my competition will be like.  I'm curious if they will have a subscription fee, or if it will be offered freely like The Render Engine will. ||
#labels Featured
= Recent Changes =

|| *Date* || *Notes* ||
|| 08/11/2008 ||I've added a couple new loaders: one for generic JSON objects, and another for simple bitmap levels with a collision map.  I then created an object to load that level into a scrolling background object.  Updated the SMB example to use the new scrolling background. ||
|| 08/08/2008 ||Internet Explorer is now loading the example game.  However, I cannot get the canvas context to show up.  I'm using !ExCanvas, and even !ExCanvas for Silverlight but neither is actually displaying anything.  I also added Firebug Lite into the mix for IE.  When you specify the `debug=true` query param, it will display the console. *Note:* I'm rethinking using the new Firebug Lite... it's not ready for primetime. ||
|| 08/05/2008 ||I've created a sprite resource loader and a sprite rendering component.  I'll be updating it with more functionality in later commits. ||
|| 08/01/2008 ||Simplified the way to get at query parameters.  Added "metrics" query parameter to allow turning on engine metrics without having to open Firebug.  I played with pooling math objects, but found it to _not_ do much for the Firefox 3 hitch.  Both Safari and Opera are outperforming Firefox 3 at the moment.  My work friend has let me know that the example game won't start on the Wii, but I'm going to continue pursuing this.  I need to get me a Wii so I can test it myself... ||
|| 07/29/2008 ||Object pooling added.  This is a big change and requires some updates to class usage in games.  See the wiki article about ObjectPooling for notes on what this means. ||
|| 07/24/2008 ||Nintendo Wii support?  It occurred to me that the Wii uses Opera.  And since Opera supports The Render Engine, I asked a friend at work to verify if the engine works.  I looked up some stuff about it and found how to access the Wii Remote from Javascript.  Added a !WiimoteInputComponent to the components list and updated the example game to attempt to use it.  I'll let you all know how it goes! ||
|| 07/21/2008 ||Well, today I confirmed that the engine runs on iPhone.  The example game is quite slow and it requires a whole different interface mechanism, but it's good to know that the engine now runs on Firefox, Safari (Mac and iPhone), and Opera.  I need to get the IE layer working (or implement a VML render context), then it'll support most major browsers.  Here's to hoping... Oh, almost forgot, I'm working on a set of demos/tutorials right now -- look for updates through the week. ||
|| 07/20/2008 ||A number of new changes have occurred.  I've added [http://www.schillmania.com/projects/soundmanager2/ SoundManager2] support for playing sounds!  This will be a nice change, but will require (at least) Adobe Flash 8.  Yeah, it kinda gets away from the "entirely in Javascript" aspect, but it's only an API -- no Flash knowledge is required for use.  I combined !EngineSupport into the engine.js file because it made sense.  A few methods were being called that Engine needed and I want as few required script calls in the game loader files.  Being able to initialize the engine just by calling "engine.js" is my ultimate goal. Finally, I've modified the "local.html" example which shows a configuration to load a game locally.  This allows for proper debugging _with sounds_ since filesystem based loading wasn't working so hot. ||
|| 07/16/2008 ||The example game is now working in FF, Opera, and Safari! I changed the library loading mechanism to queue scripts to assist Safari. I'm going to try this on iPhone at some point to see if this engine can be made viable for that platform. ||
|| 07/14/2008 ||I've recently updated the example with some small enhancements.  Yes, it's been a while since I played with the engine, but I have some time to do so.  I added the ability to set the world scale so it doesn't just render at some fixed size.  You can now scale the window to draw in a smaller area which may free up some CPU cycles on slower machines.  Additionally, I've added in a "players remaining" indicator and cleaned up some of the example game code.  Finally, I updated the metrics tracking code to allow for a sampling and smoothing so the numbers aren't so unreadable.  Along the lines of the SVG render context that I mentioned before, I'm still working on it.  It's showing promise, but isn't quite ready for primetime.  Interestingly, it has validated the concept of allowing the swapping of render contexts and not noticing a big difference.  I've got an itch to see if I can implement a context for WZGraphics written by Walter Zorn. =) ||
|| 06/2008 ||With the release of Firefox 3.0, I've noticed a huge increase in performance.  It gives me renewed hope that someday writing games for a browser will be an actual choice, and not just a hobby.  With the updates to Firefox I also have a renewed interest in getting the SVG context up and running.  I hope to get something in the short term. ||
|| 02/24/2008 || Just yesterday, February 23, 2008, I noticed that there is something similar in the works by EA called [http://www.simcarnival.com The Sims Carnival].  It's interesting to see a validation of my idea by such a big company.  I've signed up for the beta, and hope to be accepted, so I can see what my competition will be like.  I'm curious if they will have a subscription fee, or if it will be offered freely like The Render Engine will. ||